.inputs-wrapper {
	gap: 1rem;
}

.kol-input-wc {
	gap: 0.25rem;
}

.kol-input-wc .error {
	order: 1;
}

.kol-input-wc label {
	order: 2;
}

.kol-input-wc .input {
	order: 3;
}

.kol-input-wc .hint {
	order: 4;
	font-size: 0.9rem;
	font-style: italic;
}

input::placeholder {
	color: var(--color-subtle);
}

.input {
	background-color: var(--color-light);
	border-color: var(--color-subtle);
	border-radius: var(--border-radius);
	border-style: solid;
	border-width: 2px;
	padding: 0 0.5rem;
}

.input > .kol-icon {
	width: 1rem;
}

.input.icon-left > .kol-icon:first-child {
	margin-right: 0.5rem;
}

.input.icon-right > .kol-icon:last-child {
	margin-left: 0.5rem;
}

.input:is(.icon-left, .icon-right) {
	padding-left: 1rem;
	padding-right: 1rem;
}

.input:hover {
	border-color: var(--color-primary);
}

input:read-only,
input:disabled {
	cursor: not-allowed;
}

.required label > span::after {
	content: '*';
	padding-left: 0.125em;
}

.kol-input-wc.error {
	border-left: 3px solid var(--color-danger);
	padding-left: 1rem;
}

.kol-input-wc.error .input:focus-within {
	outline-color: var(--color-danger) !important;
}

.kol-input-wc.error .kol-alert.error {
	color: var(--color-danger);
	font-weight: 700;
}

.kol-input-wc.disabled :is(input, label) {
	opacity: 1;
}

.kol-input-wc.disabled :is(.input) {
	background-color: var(--color-mute);
	border-color: var(--color-mute-variant);
	color: var(--color-text);
}
