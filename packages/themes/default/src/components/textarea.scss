.kol-input {
	gap: 0.25rem;
}

.kol-input .error {
	order: 1;
}

.kol-input label {
	order: 2;
}

.kol-input .input {
	order: 3;
}

.kol-input .counter {
	order: 4;
}

.kol-input .hint {
	order: 5;
	font-size: 0.9rem;
	font-style: italic;
}

textarea {
	border: none;
	padding: 0 0.5em;
}

input::placeholder {
	color: var(--color-subtle);
}

.input > .kol-icon {
	width: 1rem;
}

.input:is(.icon-left, .icon-right) {
	padding-left: 1rem;
	padding-right: 1rem;
}

.input:is(.icon-left, .icon-right) input {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}

.input > input:first-child {
	padding-left: var(--spacing);
}

.input > input:last-child {
	padding-right: var(--spacing);
}

.input:hover {
	border-color: var(--color-primary);
}

textarea:read-only,
textarea:disabled {
	cursor: not-allowed;
}

.required label > span::after {
	content: '*';
	padding-left: 0.125em;
}

textarea {
	display: block;
	background-color: var(--color-light);
	border-color: var(--color-subtle);
	border-radius: var(--border-radius);
	border-style: solid;
	border-width: 2px;
}

.kol-input.error {
	border-left: 3px solid var(--color-danger);
	padding-left: 1rem;
}

.kol-input.error .kol-alert.error {
	color: var(--color-danger);
	font-weight: 700;
}

.kol-input.textarea {
	.input:focus-within {
		outline: none !important;
	}

	.input:focus-within textarea {
		outline-color: var(--color-primary-variant);
		outline-offset: 2px;
		outline-style: solid;
		outline-width: 3px;
		transition: outline-offset 0.2s linear;
	}

	&.error .input:focus-within textarea {
		outline-color: var(--color-danger) !important;
	}
}

.disabled {
	opacity: 0.33;
}

select[multiple],
textarea {
	overflow: auto;
}

.input {
	position: relative;
}
